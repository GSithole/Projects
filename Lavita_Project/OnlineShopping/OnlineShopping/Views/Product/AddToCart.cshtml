@model DataConection.Cart



@{
    ViewBag.Title = "AddToCart";
}

<h2>AddToCart</h2>


@using (Html.BeginForm())
{
    
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cart</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.HiddenFor(model => model.ProdID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.HiddenFor(model => model.ProdID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProdID, "", new { @class = "text-danger" })*@
                @Html.HiddenFor(model => model.ProdID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProdName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DisplayFor(model => model.ProdName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProdName, "", new { @class = "text-danger" })*@
                @Html.DisplayFor(model => model.ProdName)
                @Html.HiddenFor(model => model.ProdName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Image(Model.ImageUrl, Model.ProdName, new { @class = "img-size" })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ImageUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EachPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DisplayFor(model => model.EachPrice, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EachPrice, "", new { @class = "text-danger" })*@
                <p>R @Html.DisplayFor(model => model.EachPrice)</p>
                @Html.HiddenFor(model => model.EachPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.DisplayFor((Convert.ToInt32(Model.EachPrice) * Model.Quantity).ToString())*@
                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add To Cart" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


